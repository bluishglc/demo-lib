<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:soap="http://cxf.apache.org/bindings/soap"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						   http://cxf.apache.org/bindings/soap http://cxf.apache.org/schemas/configuration/soap.xsd
						   http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">
						   
	<context:annotation-config/>
	
	<context:component-scan base-package="com.threeti.umax.sample.workflow"/>

	<!-- CXF setting -->
	
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	
	<jaxws:client id="creditService"
		serviceClass="com.threeti.umax.sample.financialmockapp.service.CreditService"
		address="http://localhost:9090/services/CreditService/" />
	
	<jaxws:client id="contractService"
		serviceClass="com.threeti.umax.sample.salesmockapp.service.ContractService"
		address="http://localhost:9090/services/ContractService/" />
		
	<jaxws:client id="financialRiskEvaluationService"
		serviceClass="com.threeti.umax.sample.composite.service.FinancialRiskEvaluationService"
		address="http://localhost:9090/services/FinancialRiskEvaluationService/" />
	
	<jaxws:endpoint id="taskServiceService" implementor="#taskService" address="/TaskService"/>
		
	<!-- For jdbc settings and future properties files -->
	
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

    <!--  
	<bean id="bean1" class="org.activiti.spring.test.servicetask.SentenceGenerator" />

	<bean id="bean2" class="org.activiti.spring.test.servicetask.SentenceGenerator" /> 
	-->
	
	<!-- Worlflow setting -->

	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<!-- Not receate db, only update -->
		<property name="databaseSchemaUpdate" value="true" />
		<!-- Recreate db, ONLY FOR FIRST DEPLOY
		<property name="databaseSchemaUpdate" value="create-drop" />  -->
		<property name="jobExecutorActivate" value="false" />
		<!-- If you don't want to deploy every time when server restart, disable this setting. -->
		<property name="deploymentResources" value="classpath*:/diagrams/*.bpmn20.xml" />
	</bean>

	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>

	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	<bean id="activitiTaskService" factory-bean="processEngine"	factory-method="getTaskService" />
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />

</beans>
