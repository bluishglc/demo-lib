<?xml version="1.0" encoding="utf-8"?>

<!--

	ADOBE SYSTEMS INCORPORATED
	Copyright 2008 Adobe Systems Incorporated
	All Rights Reserved.

	NOTICE: Adobe permits you to use, modify, and distribute this file
	in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark TitleWindow container.

	 @see spark.skins.spark.TitleWindowCloseButtonSkin
	 @see spark.components.TitleWindow

	 @langversion 3.0
	 @playerversion Flash 10
	 @playerversion AIR 1.5
	 @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 blendMode="normal"
			 mouseEnabled="false"
			 minWidth="76"
			 minHeight="76" alpha=".7"
			 alpha.disabled="0.5"
			 alpha.disabledWithControlBar="0.5">

	<fx:Metadata>
		<![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.TitleWindow")]
        ]]>
	</fx:Metadata>

	<fx:Script fb:purpose="styling">
		<![CDATA[
			import mx.core.FlexVersion;

			/* Define the skin elements that should not be colorized.
			For panel, border and title background are skinned, but the content area, background, border, and title text are not. */
			static private const exclusions:Array=["background", "titleDisplay", "contentGroup", "border"];

			/* exclusions before Flex 4.5 for backwards-compatibility purposes */
			static private const exclusions_4_0:Array=["background", "titleDisplay", "contentGroup"];

			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor=true;
				super.initializationComplete();
			}

			/**
			 * @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				if (getStyle("borderVisible") == true)
				{
					contents.left=contents.top=contents.right=contents.bottom=1;
				}
				else
				{
					contents.left=contents.top=contents.right=contents.bottom=0;
				}

//				dropShadow.visible=getStyle("dropShadowVisible");

				var withControls:Boolean=(currentState == "disabledWithControlBar" || currentState == "normalWithControlBar" || currentState == "inactiveWithControlBar");

//				dropShadow.tlRadius=cornerRadius;
//				dropShadow.trRadius=cornerRadius;
//				dropShadow.blRadius=withControls ? cornerRadius : 0;
//				dropShadow.brRadius=withControls ? cornerRadius : 0;

				setPartCornerRadii(tbFill, withControls);
				setPartCornerRadii(cbFill, withControls);
				setPartCornerRadii(contentbFill, withControls);

				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}

			/**
			 * @private
			 */
			private function setPartCornerRadii(target:Rect, includeBottom:Boolean):void
			{
				target.topLeftRadiusX=cornerRadius;
				target.topRightRadiusX=cornerRadius;
				target.bottomLeftRadiusX=includeBottom ? cornerRadius : 0;
				target.bottomRightRadiusX=includeBottom ? cornerRadius : 0;
			}

			[Bindable]
			private var cornerRadius:Number=10;
		]]>
	</fx:Script>

	<s:states>
		<s:State name="normal"/>
		<s:State name="inactive"
				 stateGroups="inactiveGroup"/>
		<s:State name="disabled"/>
		<s:State name="normalWithControlBar"
				 stateGroups="withControls"/>
		<s:State name="inactiveWithControlBar"
				 stateGroups="withControls, inactiveGroup"/>
		<s:State name="disabledWithControlBar"
				 stateGroups="withControls"/>
	</s:states>

	<!--- drop shadow can't be hittable so it stays sibling of other graphics @private-->
	<!--<s:RectangularDropShadow id="dropShadow"
							 blurX="20"
							 blurY="20"
							 alpha="0.32"
							 alpha.inactiveGroup="0.22"
							 distance="11"
							 distance.inactiveGroup="7"
							 angle="90"
							 color="0x000000"
							 left="0"
							 top="0"
							 right="0"
							 bottom="0"/>-->

	<!--- drop shadow can't be hittable so all other graphics go in this group -->
	<s:Group left="0"
			 right="0"
			 top="0"
			 bottom="0">

		<!-- layer 3: contents -->
		<!--- Contains the vertical stack of title bar content and control bar. -->
		<s:Group left="1"
				 right="1"
				 top="1"
				 bottom="1"
				 id="contents">
			<s:layout>
				<s:VerticalLayout gap="0"
								  horizontalAlign="justify"/>
			</s:layout>
			
			<!--- @private -->
			<s:Group id="topGroup"
					 height="30">

				<!--- layer 0: title bar fill @private -->
				<s:Rect id="tbFill"
						left="0"
						right="0"
						top="0"
						bottom="0">
					<s:fill>
						<s:SolidColor color="0xD1D1D1" alpha=".8"/>
					</s:fill>
					<!--<s:stroke>
						<s:SolidColorStroke color="0x0901ac" weight="1"/>
					</s:stroke>-->
				</s:Rect>
				
				<!-- layer 3: text -->
				<!--- @copy spark.components.Panel#titleDisplay -->
				<s:Label id="titleDisplay"
						 maxDisplayedLines="1"
						 left="9"
						 right="36"
						 top="1"
						 bottom="0"
						 minHeight="30"
						 verticalAlign="middle"
						 fontWeight="bold"
						 fontFamily="宋体"
						 fontSize="14"/>

				<!-- layer 4: moveArea -->
				<!--- @copy spark.components.TitleWindow#moveArea -->
				<s:Group id="moveArea"
						 left="0"
						 right="0"
						 top="0"
						 bottom="0"/>
			</s:Group>

			<!--
				Note: setting the minimum size to 0 here so that changes to the host component's
				size will not be thwarted by this skin part's minimum size.   This is a compromise,
				more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
			-->
			<!--- @copy spark.components.SkinnableContainer#contentGroup -->
			<s:Group id="contentGroup"
					 width="100%"
					 height="100%"
					 minWidth="0"
					 minHeight="0">
				<s:Rect id="contentbFill"
						left="0"
						right="0"
						top="0"
						bottom="0">
					<s:fill>
						<s:SolidColor color="0xcce2f9" alpha=".7"/>
					</s:fill>
					<!--<s:stroke>
						<s:SolidColorStroke color="0x0901ac" weight="1"/>
					</s:stroke>-->
				</s:Rect>
			</s:Group>

			<!--- @private -->
			<s:Group id="bottomGroup"
					 minWidth="0"
					 minHeight="0"
					 includeIn="withControls"
					 height="30">
				<s:Group left="0"
						 right="0"
						 top="0"
						 bottom="0">

					<!-- layer 2: control bar fill -->
					<s:Rect id="cbFill"
							left="0"
							right="0"
							top="0"
							bottom="0">
						<s:fill>
							<s:SolidColor color="0xD1D1D1" alpha=".8"/>
						</s:fill>
						<!--<s:stroke>
							<s:SolidColorStroke color="0x0901ac" weight="1"/>
						</s:stroke>-->
					</s:Rect>
				</s:Group>

				<!--- @copy spark.components.Panel#controlBarGroup -->
				<s:Group id="controlBarGroup"
						 left="0"
						 right="0"
						 top="0"
						 bottom="0"
						 minWidth="0"
						 minHeight="0">
					<s:layout>
						<s:HorizontalLayout paddingLeft="10"
											paddingRight="10"
											paddingTop="7"
											paddingBottom="7"
											gap="10"
											horizontalAlign="center"
											verticalAlign="middle"/>
					</s:layout>
				</s:Group>
			</s:Group>
		</s:Group>
	</s:Group>
</s:SparkSkin>
